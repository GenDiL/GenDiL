on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
        std: [c++17]
    env:
      MFEM_INSTALL: $HOME/.local/mfem

    steps:
      - uses: actions/checkout@v3

      - name: Setup build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build

      - name: Clone MFEM (master)
        run: git clone --depth 1 https://github.com/mfem/mfem.git

      - name: Build & install MFEM
        run: |
          mkdir mfem/build && cd mfem/build
          cmake -DCMAKE_INSTALL_PREFIX=$MFEM_INSTALL \
                -DCMAKE_BUILD_TYPE=Release \
                -DMFEM_USE_MPI=OFF \
                -DMFEM_USE_METIS_5=OFF \
                -DMFEM_USE_SUNDIALS=OFF \
                ..
          cmake --build . --target install -- -j$(nproc)

      - name: Configure GenDiL
        run: |
          cmake -B build -S . \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} \
            -DCMAKE_CXX_STANDARD=${{ matrix.std }} \
            -DUSE_MFEM=ON \
            -DMFEM_DIR=$MFEM_INSTALL/lib/cmake/mfem

      - name: Build
        run: cmake --build build -- -j$(nproc)

      - name: Run tests
        run: cmake --build build --target test

      - name: Run clang-tidy
        if: matrix.compiler == 'clang'
        run: |
          cd build
          run-clang-tidy -p .
